resilientSolutionsID;Name;Description;references
EETK1;SNBP;Simple Naive Bayes Prediction model (SNBP model) is a technique to remove unnecessary and redundant data, which saves he energy to be used for transmission of data in Wireless Sensor Networks and increases the life of network as data for  ransmission is reduced which saves that energy of sensor nodes.;P70
EETK2;INBP;| Incremental Naive Bayes Prediction model (INBP model) is a technique that apply data reductionto remove data redundancy in wSN, increase life of network and save energy of WSN. INBP isfocused on prediction approach for weather forecasting in WSN with several data attributes to remove data redundancy and save the energy of sensor nodes. More details can he foundat;P71
EETK3;Energy Efficient Routing Protocol;Routing Protocols in the network layer is a techniques for designing low-power systems based on fixed hardware platforms for improving energy efficiency in WSN. More details can be found atp72;P72
EETK4;Energy Efficient MAC Protocol;Scheduling and Contention Protocols in the MAC layer is a techniques for designing low-powersystems based on fixed hardware platforms for improving energy efficiency in WSN. More details can be found at [p73];P73
EETK5;Energy Efficient Data Aggregation technique;Energy Efficient Data Aggregation technique is a energy efficient routing protocol for WirelesSSensor Networks which is energy efficient and reliable. This technique is based on cluster formation and the loss ratios of the clusters are measured so that the energy consumption can be effectively reduced. Reliable transmission can be provided in the clusters using a coordinate node. More details can be found at [p74,p75];P74,P75
RTK1;Data Redundancy;The most common scenarios of redundancy in information systems are data redundancy.All forms of data can be redundant -- files, databases, and objects in memory. Data and its replications can reside in the same machine or in different locations across machines, networks, and geographical areas. In a server-client system, data and its replications can all be on server side, or some on server side and some on client side, for example, client-side cache. Redundancy of data increases data's availability in case of failures due to unexpected heavy load, data node failures or lost connection between client and server;P76
RTK2;Processing Redundancy;Similar to data elements, processing elements can also be redundant in a system. This form of redundancy is also very common in enterprise information systems, for example, clustering of web servers and application servers. However, redundancy of processing elements is more difficult than data elements because of the problem of state. If a processing element needs to maintain state for an undergoing computation task, then it is difficult to make the processing element truly redundant. For if the processing element fails, there is no way to recover the task state that only exists in that element. There are two approaches to addressing this problem -- to make the task stateless or to restart the whole task from its initial state in case of failure;P76
RTK3;Element Replication;A common way to achieve redundancy is to create replicas of an element. The structure and functionality of a replica are exactly the same as that element so that they can substitute each other without problem. Follows some ways of implementing redundancy using [p87]: Design for failure: Acquiring more resources than needed and replace failed ones (DC A.8).Allowing component replication: State-machine (active) replication (DC A.11), Transactional replication (DC A.12), Virtual synchrony (DCA 13);P76,P87
RTK4;Hardware Clustering; High-availability clustering is a technique for protecting against failures by mirroring the whole computer rather than just a disk. In a clustered configuration, two or more identical computers (referred to as.nodes) are deployed in parallel and share the total workload between them. If any one of the nodes fails, one of the remaining nodes takes over its workload and processing can continue (although the transactions in progress at the failed node may have to be resubmitted) This process is known as failover. Follows some ways of implementing it using [p87]: VE Resolution location-oriented (DCA.1), VE Resolution domain-oriented (DC A.2), VE Resolution Semantic Web-oriented (DCA.3), VE Resolution Peer-to-Peer-oriented (DC A4);P87,P88
RTK5;Relaxing Transactional Consistency;To follow this tactic the loT-A recommend the use of the 'BASE architecture (DC A.14). The BASE (Basically Available, Soft-state, Eventually consistent) architecture' is applicable in systems supporting distributed transactions with optimistic replication strategy. In this approach replicas of information are sent through a distributed system via transactions and eventual consistency' among the replicas is achieved by either the update reaches the replica or the replica retires from service. BASE requires some conflict resolution functionality and additional system resources in order to find failure in transactions. The approach is applicable for hiah performance desians.;p87
RTK6;Redundant Disk Architectures;Redundant disk architectures (such as RAID 1 or mirored disks) are a particularly common example. RAID (Redundant Array of Inexpensive or Independent Disks) architectures are available in a variety of configurations, known as RAID levels, which variously provide resilience through mimoring, improved performance through striping, and/or error correction. As shown in the diagram below, disk writes are applied to each side of the mirror, whereas reads come from only one side (or in some configurations, whichever side can return the information with the least amount of head movement). If either disk fails, the other can continue on its own until the faulty disk is replaced and resynchronized.;P88
